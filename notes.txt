NOVA 2018
~~~

#noteletext #justrasters
Maybe a demo for NOVA 2018 :)

Have <=10 weeks in theory until 23 June 2018
Bound to lose some of these to work & RL etc.
Need to commit to doing this by April 28 (2 weeks)
Aim to complete the demo by May 9 (6 weeks)
Giving 2 weeks buffer and chance to test etc.

Obvious place to start is raster timed FX from last year
Would like to do 3D (especially w/ co-pro) but not enough
time to explore this properly (save to next year)

Have some FX already written (many not seen on Beeb before):
1/ Kefrens bars
2/ Parallax bars
3/ Horizontal bars
4/ Twister

Additional FX that could be "quickly" written in theory:
5/ Checkboard zoom or wibble
6/ Static text/image raster stretch (32x32)
7/ Raster scrolltext?

Theme could be #noteletext to riff on idea that Beeb
can only do Teletext FX.

So start with Teletext as per Teletextr then switch
to raster FX. #justrasters

As always, keep it snappy so each FX just 30 seconds
ideally with 3x variations on the FX for 10 seconds each
Need some quick & easy way of intro'ing each part

- 20s (max) #noteletext #justrasters intro
- 30s for each FX x4-6
- 20s (max) outro & credits

Aim for 3m30s maximum :)

Assume Master only so can use SWRAM and SHADOW
As per Teletextr, preload all FX into SWRAM first
Don't forget we now understand ANDY & HAZEL better!

TO DO to get to commitment
~~~
1. Need to prove enough time to run music w/out events - DONE
    - Hack vgmplayer into Kefrens bars in our vsync

2. Need to be able to switch between FX - DONE
    - Simple framework for sequencing the parts - DONE
      Do vsync in main loop and call render fn in FX module
      Main loop also resets CRTC cycle to standard values?

    - Initialise fn for setting up frame buffers before FX - DONE
      Use pucrunch to decompress from SWRAM? (Size check!)
      How to keep the music going between FX here? (Figure out later)

    - Frame counter in main loop to control sequence - DONE
      Kill previous FX module (is kill fn needed?)
      Initialise new FX module (before first tick)
      Switch FX params (or trigger next variation)

To complete the demo
~~~
1. Each FX needs to look a lot nicer!
2. Each FX needs 3x variants (ideally)
3. Need custom music from IP
4. Need intro (w/ Teletext?)
5. Need outro (w/ Teletext?)
6. Need some way of introducing the parts
7. Timing & polish

What is the most impressive FX to finish on?!?


TO DO
~~~
. Move music out of Core RAM - put in SWRAM for now (leave ANDY & HAZEL?) - DONE
. Move Kefrens module to SWRAM - leave expanded codegen to begin with - DONE
. Port another FX module into framework - Twister? - DONE
. System for switching between FX - leave music broken for now! - DONE
. Establish what the default machine state is between FX - DONE
  . what can be assumed and doesn't need to be initialised
  . and what needs to be put back on FX kill
  . fix crud left on screen by Parallax etc.
. Come up with standard approach to hiding any CRTC glitches during FX init - DONE
  . blank screen with CRTC registers going to be tough as part of setup!
  . display blank SHADOW screen - what if FX needs to copy to SHADOW?
  . use palette to blackout?
. Check timing of ULA palette switch in rotbox - DONE
  . should we move to scanline -1 start (or just hblank?)
. Check SHADOW RAM usage in Parallax - DONE
  . what ACCON state should be expected between FX?

. Fix audio glitch during long init - see following
. Decompress screen data from SWRAM - preconvert Twister & Parallax to 
. Decompress generated code from SWRAM - establish guaranteed space in CORE
  
For switching between FX it's probably OK to reenable interupts & run the vgm_player
on an event. Just need to re-vsync after initialising the next part - DONE
-> or actually, make init fn responsible for polling music player after vsyncs
can provide standard memory move and or decompress fns with this included - TODO

OK, propose that initialisation expectation is:

- CRTC and Video ULA set to MODE 2, SHEILA = &F4 
- ULA palette set to default (no flash) ??
- Single buffered with main memory paged in and displayed, so ACCON | 5 = 0
- Screen buffer may be garbage so set this up as required (most FX copying into buffer anyway)

Checkerboard
~~~
Options:
. Precompute checker pattern for 32x32 squares shifted by 1 pixel each
  . Set frame buffer address per scanline - allows wibble effect
  . Flip colours every 32 scanline using ULA flash bit
  . Flip colours when x offset > 32 in same way
  . Would sort out timing on scanline -1
  . Would implement decompress from SWRAM to screen buffer

. Draw black & white pixels into single scanline buffer as per Kefrens
  . No wibble as all scanlines will have to be vertically aligned
  . But could allow zoom at same time as scroll
  . Flip colours every N scanlines using ULA flash bit
  . MODE 4

N pixels 0 followed by N pixels 1

0<=xoff<2N
c=0;
p=N-xoff;
if(p<0)
{
  c=1;
  p=-p;
}
for(x = 0; x<320; x++)
{
  pixel[x]=c;
  p++;
  if( p >= N )
  {
    c^=1;
    p=0;
  }
}

for(x = 0; x<320; x+=8)
{
  byte=0
  for(b=0; b<7; b++)
  {
    b=b<<1;
    b|=c;
    p++;
    if (p>=N)
    {
      c^=1;
      p=0;
    }
  }
  byte[x]=b;
}

Now generated byte spans for N pixels at offsets 0-7
X DIV N gives odd or even checker
X MOD N gives offset into checker
(X MOD N) MOD 8 gives which pixel offset table to use
(X MOD N) DIV 8 gives byte offset to start in data
